<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FAEEEEBIIIKgkEEFQSCCCo//2Q==
</value>
  </data>
</root>