<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SgFKUoBSlKAUpSgFKUoBSlKAUpSgFKUoD//Z
</value>
  </data>
</root>